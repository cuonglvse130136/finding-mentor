// <auto-generated />
using System;
using Data.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211027153015_a")]
    partial class a
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("MentorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MentorId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e336"),
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(7705),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(7712),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219379"),
                            Name = "Course 1",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "PRJ001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e337"),
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7424),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7432),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219381"),
                            Name = "Course 2",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "PRJ002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e338"),
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7534),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7536),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219383"),
                            Name = "Course 3",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "PRJ003"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e339"),
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7550),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7551),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219379"),
                            Name = "Course 4",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "PRF001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e340"),
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7563),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7564),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219381"),
                            Name = "Course 5",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "PRF002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e341"),
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7575),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7576),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219383"),
                            Name = "Course 6",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "PRF003"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e342"),
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7585),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7587),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219387"),
                            Name = "Course 7",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "ENG001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e343"),
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7596),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7597),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219390"),
                            Name = "Course 8",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "ENG002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e344"),
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7607),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7608),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219394"),
                            Name = "Course 9",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "ENG003"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e345"),
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7618),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7619),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219386"),
                            Name = "Course 10",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "JPN001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e346"),
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7628),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7629),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219388"),
                            Name = "Course 11",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "JPN002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e347"),
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7638),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7639),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219391"),
                            Name = "Course 12",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "JPN003"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e348"),
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7648),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7649),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219389"),
                            Name = "Course 13",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "CNN001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e349"),
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7659),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7660),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219392"),
                            Name = "Course 14",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "CNN002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e350"),
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7669),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7670),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219400"),
                            Name = "Course 15",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "CNN003"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e351"),
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7679),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7681),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219397"),
                            Name = "Course 16",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "MKT001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e352"),
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7689),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7691),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219397"),
                            Name = "Course 17",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "MKT002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e353"),
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7700),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7701),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219399"),
                            Name = "Course 18",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "MKT003"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e354"),
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7710),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7711),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219393"),
                            Name = "Course 19",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "GDS001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e355"),
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7720),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7721),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219395"),
                            Name = "Course 20",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "GDS002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e356"),
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7730),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 682, DateTimeKind.Local).AddTicks(7732),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219395"),
                            Name = "Course 21",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "GDS003"
                        });
                });

            modelBuilder.Entity("Data.Entities.Major", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Major");

                    b.HasData(
                        new
                        {
                            Id = "SE",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 679, DateTimeKind.Local).AddTicks(1743),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(680),
                            IsDeleted = false,
                            Name = "Software Engineering"
                        },
                        new
                        {
                            Id = "SB",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(1402),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(1408),
                            IsDeleted = false,
                            Name = "Economic"
                        },
                        new
                        {
                            Id = "SA",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(1423),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(1425),
                            IsDeleted = false,
                            Name = "English"
                        },
                        new
                        {
                            Id = "CN",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(1427),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(1428),
                            IsDeleted = false,
                            Name = "Chinese"
                        },
                        new
                        {
                            Id = "SJ",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(1429),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(1430),
                            IsDeleted = false,
                            Name = "Japanese"
                        },
                        new
                        {
                            Id = "GD",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(1432),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(1433),
                            IsDeleted = false,
                            Name = "Graphic Design"
                        });
                });

            modelBuilder.Entity("Data.Entities.Mentor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsGraduted")
                        .HasColumnType("bit");

                    b.Property<string>("MajorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MajorId");

                    b.HasIndex("UserId");

                    b.ToTable("Mentor");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219379"),
                            IsGraduted = false,
                            MajorId = "SE",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b061"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219380"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b061"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219381"),
                            IsGraduted = false,
                            MajorId = "SE",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b062"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219382"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b062"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219383"),
                            IsGraduted = false,
                            MajorId = "SE",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b063"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219384"),
                            IsGraduted = false,
                            MajorId = "SJ",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b063"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219385"),
                            IsGraduted = false,
                            MajorId = "SE",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b064"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219386"),
                            IsGraduted = false,
                            MajorId = "SJ",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b064"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219387"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b065"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219388"),
                            IsGraduted = false,
                            MajorId = "SJ",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b065"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219389"),
                            IsGraduted = false,
                            MajorId = "CN",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b065"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219390"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b068"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219391"),
                            IsGraduted = false,
                            MajorId = "SJ",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b068"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219392"),
                            IsGraduted = false,
                            MajorId = "CN",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b068"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219393"),
                            IsGraduted = false,
                            MajorId = "GD",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b069"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219394"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b069"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219395"),
                            IsGraduted = false,
                            MajorId = "GD",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b070"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219396"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b070"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219397"),
                            IsGraduted = false,
                            MajorId = "SB",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b071"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219398"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b071"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219399"),
                            IsGraduted = false,
                            MajorId = "SB",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b072"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219400"),
                            IsGraduted = false,
                            MajorId = "CN",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b072"
                        });
                });

            modelBuilder.Entity("Data.Entities.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.HasIndex("StudentId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("Data.Entities.Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("File")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SubjectMentorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectMentorId");

                    b.ToTable("Resource");
                });

            modelBuilder.Entity("Data.Entities.Section", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Section");
                });

            modelBuilder.Entity("Data.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Data.Entities.StudentRegistration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentRegistration");
                });

            modelBuilder.Entity("Data.Entities.Subject", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subject");

                    b.HasData(
                        new
                        {
                            Id = "PRJ001",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5006),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5014),
                            IsDeleted = false,
                            Name = "Java OOP"
                        },
                        new
                        {
                            Id = "PRJ002",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5560),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5563),
                            IsDeleted = false,
                            Name = "Java Desktop"
                        },
                        new
                        {
                            Id = "PRJ003",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5590),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5592),
                            IsDeleted = false,
                            Name = "Java Web"
                        },
                        new
                        {
                            Id = "PRF001",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5594),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5595),
                            IsDeleted = false,
                            Name = "C"
                        },
                        new
                        {
                            Id = "PRF002",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5596),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5597),
                            IsDeleted = false,
                            Name = "C++"
                        },
                        new
                        {
                            Id = "PRF003",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5599),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5600),
                            IsDeleted = false,
                            Name = "C#"
                        },
                        new
                        {
                            Id = "ENG001",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5602),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5603),
                            IsDeleted = false,
                            Name = "English 1"
                        },
                        new
                        {
                            Id = "ENG002",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5605),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5606),
                            IsDeleted = false,
                            Name = "English 2"
                        },
                        new
                        {
                            Id = "ENG003",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5607),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5608),
                            IsDeleted = false,
                            Name = "English 3"
                        },
                        new
                        {
                            Id = "JPN001",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5610),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5611),
                            IsDeleted = false,
                            Name = "Japanese 1"
                        },
                        new
                        {
                            Id = "JPN002",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5613),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5614),
                            IsDeleted = false,
                            Name = "Japanese 2"
                        },
                        new
                        {
                            Id = "JPN003",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5616),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5617),
                            IsDeleted = false,
                            Name = "Japanese 3"
                        },
                        new
                        {
                            Id = "CNN001",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5619),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5620),
                            IsDeleted = false,
                            Name = "Chinese 1"
                        },
                        new
                        {
                            Id = "CNN002",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5621),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5623),
                            IsDeleted = false,
                            Name = "Chinese 2"
                        },
                        new
                        {
                            Id = "CNN003",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5624),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5625),
                            IsDeleted = false,
                            Name = "Chinese 3"
                        },
                        new
                        {
                            Id = "MKT001",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5627),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5628),
                            IsDeleted = false,
                            Name = "Marketing 1"
                        },
                        new
                        {
                            Id = "MKT002",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5630),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5631),
                            IsDeleted = false,
                            Name = "Marketing 2"
                        },
                        new
                        {
                            Id = "MKT003",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5633),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5634),
                            IsDeleted = false,
                            Name = "Marketing 3"
                        },
                        new
                        {
                            Id = "GDS001",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5635),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5637),
                            IsDeleted = false,
                            Name = "History of Graphic Design"
                        },
                        new
                        {
                            Id = "GDS002",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5638),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5639),
                            IsDeleted = false,
                            Name = "Design Basic"
                        },
                        new
                        {
                            Id = "GDS003",
                            DateCreated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5641),
                            DateUpdated = new DateTime(2021, 10, 27, 22, 30, 14, 680, DateTimeKind.Local).AddTicks(5642),
                            IsDeleted = false,
                            Name = "Design Advance"
                        });
                });

            modelBuilder.Entity("Data.Entities.SubjectMajor", b =>
                {
                    b.Property<string>("MajorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MajorId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectMajor");

                    b.HasData(
                        new
                        {
                            MajorId = "SE",
                            SubjectId = "PRJ001"
                        },
                        new
                        {
                            MajorId = "SE",
                            SubjectId = "PRJ002"
                        },
                        new
                        {
                            MajorId = "SE",
                            SubjectId = "PRJ003"
                        });
                });

            modelBuilder.Entity("Data.Entities.SubjectMentor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MentorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MentorId");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectMentors");
                });

            modelBuilder.Entity("Data.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double>("Deposit")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Withdraw")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("Data.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDisable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabledMentor")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MajorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("MajorId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b061",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "83e0196a-4ac9-45ce-98a1-adc93031bc94",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp1",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp1",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6e41a5ff-92a3-46b5-a0c1-c67666322576",
                            TwoFactorEnabled = false,
                            UserName = "emp1"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b062",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "fa771d18-863d-458a-be15-2480c0f2972c",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp2",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp2",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0485ba68-a9f6-4e8a-9cea-c47f3ef724fd",
                            TwoFactorEnabled = false,
                            UserName = "emp2"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b063",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "b626fb86-aaf0-4333-a165-8d8d61275dbb",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp3",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp3",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8ccfc18d-fdd7-4d9b-a218-3c1a58cc8ca5",
                            TwoFactorEnabled = false,
                            UserName = "emp3"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b064",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "f587198b-73cc-4478-b379-e81b81c65d6e",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp4",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp4",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "69442a0e-e3a6-45fc-a79f-08559e4fd8b6",
                            TwoFactorEnabled = false,
                            UserName = "emp4"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b065",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "cebf6cf7-3d22-42df-80b0-43dc626a9898",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp5",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp5",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "21bab382-0e1d-4957-8888-2f523c559c30",
                            TwoFactorEnabled = false,
                            UserName = "emp5"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b066",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "556f6ab1-cc79-47f6-87e5-a36b927f9b14",
                            EmailConfirmed = false,
                            Fullname = "Mr. Loc",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "loc",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "427ca7d4-15c9-4aec-9516-e6b2426df539",
                            TwoFactorEnabled = false,
                            UserName = "loc"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b067",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "7bf3f899-4f84-4765-83e4-155009152a78",
                            EmailConfirmed = false,
                            Fullname = "Mr. Tam",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "tam",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "669014e9-c9e6-41e8-8f89-aefd9c82254b",
                            TwoFactorEnabled = false,
                            UserName = "tam"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b068",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "90367c15-b6a5-4545-bde9-dfa118cb7752",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp6",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp6",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7406cd4e-95bf-4178-aa79-eb9217206719",
                            TwoFactorEnabled = false,
                            UserName = "emp6"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b069",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ea2c0ab9-88cf-41c8-b14c-c4fea2bda5d8",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp7",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp7",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1ca768e4-09b2-4ddf-adf1-05c9b7c12e86",
                            TwoFactorEnabled = false,
                            UserName = "emp7"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b070",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "dbf50caa-b9cf-4a20-8e5b-bd1b9056dce9",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp8",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp8",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f652b253-a1e0-42f9-af88-e19ca372375e",
                            TwoFactorEnabled = false,
                            UserName = "emp8"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b071",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "3e96f78e-e21e-425f-b8e5-8820d2249371",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp9",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp9",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2413dfb7-7697-4cc3-b405-e6ec99db33fa",
                            TwoFactorEnabled = false,
                            UserName = "emp9"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b072",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "dcbe34c3-8853-4e42-8aaf-e88fcfce068d",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp10",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp10",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ac47003d-134c-4442-8dc3-2a67c5425a7b",
                            TwoFactorEnabled = false,
                            UserName = "emp10"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b073",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "98d00cf2-69ef-4f65-974d-2679ec8c882e",
                            EmailConfirmed = false,
                            Fullname = "Mr. Loc1",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "loc1",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "215796f7-e827-4fba-bb58-bb5ee99a34f3",
                            TwoFactorEnabled = false,
                            UserName = "loc1"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b074",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "1ef43cf4-5eae-47ef-8265-b26a4974a443",
                            EmailConfirmed = false,
                            Fullname = "Mr. Tam1",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "tam1",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3e71f002-7c56-4916-9ee4-3e0b62fb72ec",
                            TwoFactorEnabled = false,
                            UserName = "tam1"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b075",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "77a38657-a6bf-4051-8a48-00d08fa67d41",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp11",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp11",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "82a40a4d-d517-4052-b6ce-9ec52a2b6f96",
                            TwoFactorEnabled = false,
                            UserName = "emp11"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b076",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "4f231135-db25-4dd7-84ea-489b17932ba7",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp12",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp12",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "76cab629-73cf-4c0a-8612-aa88d4082f53",
                            TwoFactorEnabled = false,
                            UserName = "emp12"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b077",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "9099fe29-0d38-4722-b1f3-49578359bf34",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp13",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp13",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "481bb453-4bbd-4e6a-824a-79c3bff11de1",
                            TwoFactorEnabled = false,
                            UserName = "emp13"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b078",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "9e261016-b735-456f-8c3d-7107bbe8a4f9",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp14",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp14",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "de32cd51-9534-42c3-8f30-5b6bdd92d8d2",
                            TwoFactorEnabled = false,
                            UserName = "emp14"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b079",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "6322e9ac-845f-4b4d-9556-eac827bb1b1a",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp15",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp15",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "13b62ea3-518a-4fb1-b03f-7753b617d1b7",
                            TwoFactorEnabled = false,
                            UserName = "emp15"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b080",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d6a7ddc5-af40-4088-9036-f53e3bf8fbd1",
                            EmailConfirmed = false,
                            Fullname = "Mr. Loc2",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "loc2",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1b4c2e93-9e93-455c-92ac-0efee681f9d8",
                            TwoFactorEnabled = false,
                            UserName = "loc2"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b081",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "8fcc3e38-0284-4a2b-b93a-d4889808725f",
                            EmailConfirmed = false,
                            Fullname = "Mr. Tam2",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "tam2",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d030e831-c950-4d6a-83b7-ca43710f002c",
                            TwoFactorEnabled = false,
                            UserName = "tam2"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b060",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "e9041923-1f99-41f7-9f46-58fa2127116f",
                            EmailConfirmed = false,
                            Fullname = "Admin Ne`",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e86e9a06-9f90-4213-9065-53345b66df02",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "ADMIN",
                            ConcurrencyStamp = "ADMIN",
                            Name = "ADMIN",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "MENTOR",
                            ConcurrencyStamp = "MENTOR",
                            Name = "MENTOR",
                            NormalizedName = "MENTOR"
                        },
                        new
                        {
                            Id = "STUDENT",
                            ConcurrencyStamp = "STUDENT",
                            Name = "STUDENT",
                            NormalizedName = "STUDENT"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b060",
                            RoleId = "ADMIN"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b061",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b062",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b063",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b064",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b065",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b066",
                            RoleId = "STUDENT"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b067",
                            RoleId = "STUDENT"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b068",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b069",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b070",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b071",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b072",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b073",
                            RoleId = "STUDENT"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b074",
                            RoleId = "STUDENT"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b075",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b076",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b077",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b078",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b079",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b080",
                            RoleId = "STUDENT"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b081",
                            RoleId = "STUDENT"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Data.Entities.Course", b =>
                {
                    b.HasOne("Data.Entities.Mentor", "Mentor")
                        .WithMany("Courses")
                        .HasForeignKey("MentorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId");
                });

            modelBuilder.Entity("Data.Entities.Mentor", b =>
                {
                    b.HasOne("Data.Entities.Major", "Major")
                        .WithMany("Mentors")
                        .HasForeignKey("MajorId");

                    b.HasOne("Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Data.Entities.Question", b =>
                {
                    b.HasOne("Data.Entities.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Resource", b =>
                {
                    b.HasOne("Data.Entities.SubjectMentor", "SubjectMentor")
                        .WithMany("Resources")
                        .HasForeignKey("SubjectMentorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Section", b =>
                {
                    b.HasOne("Data.Entities.Course", "Course")
                        .WithMany("Sections")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Student", b =>
                {
                    b.HasOne("Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Data.Entities.StudentRegistration", b =>
                {
                    b.HasOne("Data.Entities.Course", "Course")
                        .WithMany("StudentRegistrations")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Student", "Student")
                        .WithMany("StudentRegistrations")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.SubjectMajor", b =>
                {
                    b.HasOne("Data.Entities.Major", "Major")
                        .WithMany("SubjectMajors")
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.SubjectMentor", b =>
                {
                    b.HasOne("Data.Entities.Mentor", "Mentor")
                        .WithMany("SubjectMentors")
                        .HasForeignKey("MentorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Subject", "Subject")
                        .WithMany("SubjectMentors")
                        .HasForeignKey("SubjectId");
                });

            modelBuilder.Entity("Data.Entities.Transaction", b =>
                {
                    b.HasOne("Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Data.Entities.User", b =>
                {
                    b.HasOne("Data.Entities.Major", "Major")
                        .WithMany("Users")
                        .HasForeignKey("MajorId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
