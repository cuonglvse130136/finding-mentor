// <auto-generated />
using System;
using Data.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MajorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("MentorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MajorId");

                    b.HasIndex("MentorId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e336"),
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(9236),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(9242),
                            IsDeleted = false,
                            MajorId = "SE",
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219379"),
                            Name = "Course 1",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "PRJ001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e337"),
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 98, DateTimeKind.Local).AddTicks(9702),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 98, DateTimeKind.Local).AddTicks(9710),
                            IsDeleted = false,
                            MajorId = "SE",
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219381"),
                            Name = "Course 2",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "PRJ002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e338"),
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 98, DateTimeKind.Local).AddTicks(9824),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 98, DateTimeKind.Local).AddTicks(9826),
                            IsDeleted = false,
                            MajorId = "SE",
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219383"),
                            Name = "Course 3",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "PRJ003"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e339"),
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 98, DateTimeKind.Local).AddTicks(9841),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 98, DateTimeKind.Local).AddTicks(9842),
                            IsDeleted = false,
                            MajorId = "SE",
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219379"),
                            Name = "Course 4",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "PRF001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e340"),
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 98, DateTimeKind.Local).AddTicks(9853),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 98, DateTimeKind.Local).AddTicks(9854),
                            IsDeleted = false,
                            MajorId = "SE",
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219381"),
                            Name = "Course 5",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "PRF002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e341"),
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 98, DateTimeKind.Local).AddTicks(9864),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 98, DateTimeKind.Local).AddTicks(9865),
                            IsDeleted = false,
                            MajorId = "SE",
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219383"),
                            Name = "Course 6",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "PRF003"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e342"),
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 98, DateTimeKind.Local).AddTicks(9875),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 98, DateTimeKind.Local).AddTicks(9876),
                            IsDeleted = false,
                            MajorId = "SA",
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219387"),
                            Name = "Course 7",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "ENG001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e343"),
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 98, DateTimeKind.Local).AddTicks(9886),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 98, DateTimeKind.Local).AddTicks(9887),
                            IsDeleted = false,
                            MajorId = "SA",
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219390"),
                            Name = "Course 8",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "ENG002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e344"),
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 98, DateTimeKind.Local).AddTicks(9896),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 98, DateTimeKind.Local).AddTicks(9897),
                            IsDeleted = false,
                            MajorId = "SA",
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219394"),
                            Name = "Course 9",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "ENG003"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e345"),
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 98, DateTimeKind.Local).AddTicks(9908),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 98, DateTimeKind.Local).AddTicks(9909),
                            IsDeleted = false,
                            MajorId = "SJ",
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219386"),
                            Name = "Course 10",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "JPN001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e346"),
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 98, DateTimeKind.Local).AddTicks(9918),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 98, DateTimeKind.Local).AddTicks(9919),
                            IsDeleted = false,
                            MajorId = "SJ",
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219388"),
                            Name = "Course 11",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "JPN002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e347"),
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 98, DateTimeKind.Local).AddTicks(9928),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 98, DateTimeKind.Local).AddTicks(9929),
                            IsDeleted = false,
                            MajorId = "SJ",
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219391"),
                            Name = "Course 12",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "JPN003"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e348"),
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 98, DateTimeKind.Local).AddTicks(9938),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 98, DateTimeKind.Local).AddTicks(9939),
                            IsDeleted = false,
                            MajorId = "CN",
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219389"),
                            Name = "Course 13",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "CNN001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e349"),
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 99, DateTimeKind.Local).AddTicks(12),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 99, DateTimeKind.Local).AddTicks(13),
                            IsDeleted = false,
                            MajorId = "CN",
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219392"),
                            Name = "Course 14",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "CNN002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e350"),
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 99, DateTimeKind.Local).AddTicks(27),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 99, DateTimeKind.Local).AddTicks(29),
                            IsDeleted = false,
                            MajorId = "CN",
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219400"),
                            Name = "Course 15",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "CNN003"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e351"),
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 99, DateTimeKind.Local).AddTicks(41),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 99, DateTimeKind.Local).AddTicks(43),
                            IsDeleted = false,
                            MajorId = "SB",
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219397"),
                            Name = "Course 16",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "MKT001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e352"),
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 99, DateTimeKind.Local).AddTicks(55),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 99, DateTimeKind.Local).AddTicks(57),
                            IsDeleted = false,
                            MajorId = "SB",
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219397"),
                            Name = "Course 17",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "MKT002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e353"),
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 99, DateTimeKind.Local).AddTicks(69),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 99, DateTimeKind.Local).AddTicks(70),
                            IsDeleted = false,
                            MajorId = "SB",
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219399"),
                            Name = "Course 18",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "MKT003"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e354"),
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 99, DateTimeKind.Local).AddTicks(79),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 99, DateTimeKind.Local).AddTicks(81),
                            IsDeleted = false,
                            MajorId = "GD",
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219393"),
                            Name = "Course 19",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "GDS001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e355"),
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 99, DateTimeKind.Local).AddTicks(90),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 99, DateTimeKind.Local).AddTicks(91),
                            IsDeleted = false,
                            MajorId = "GD",
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219395"),
                            Name = "Course 20",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "GDS002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e356"),
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 99, DateTimeKind.Local).AddTicks(100),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 99, DateTimeKind.Local).AddTicks(101),
                            IsDeleted = false,
                            MajorId = "GD",
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219395"),
                            Name = "Course 21",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "GDS003"
                        });
                });

            modelBuilder.Entity("Data.Entities.Major", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Major");

                    b.HasData(
                        new
                        {
                            Id = "SE",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 95, DateTimeKind.Local).AddTicks(1325),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(185),
                            IsDeleted = false,
                            Name = "Software Engineering"
                        },
                        new
                        {
                            Id = "SB",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(963),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(967),
                            IsDeleted = false,
                            Name = "Economic"
                        },
                        new
                        {
                            Id = "SA",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(983),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(984),
                            IsDeleted = false,
                            Name = "English"
                        },
                        new
                        {
                            Id = "CN",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(985),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(987),
                            IsDeleted = false,
                            Name = "Chinese"
                        },
                        new
                        {
                            Id = "SJ",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(988),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(989),
                            IsDeleted = false,
                            Name = "Japanese"
                        },
                        new
                        {
                            Id = "GD",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(991),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(992),
                            IsDeleted = false,
                            Name = "Graphic Design"
                        });
                });

            modelBuilder.Entity("Data.Entities.Mentor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsGraduted")
                        .HasColumnType("bit");

                    b.Property<string>("MajorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MajorId");

                    b.HasIndex("UserId");

                    b.ToTable("Mentor");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219379"),
                            IsGraduted = false,
                            MajorId = "SE",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b061"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219380"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b061"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219381"),
                            IsGraduted = false,
                            MajorId = "SE",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b062"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219382"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b062"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219383"),
                            IsGraduted = false,
                            MajorId = "SE",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b063"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219384"),
                            IsGraduted = false,
                            MajorId = "SJ",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b063"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219385"),
                            IsGraduted = false,
                            MajorId = "SE",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b064"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219386"),
                            IsGraduted = false,
                            MajorId = "SJ",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b064"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219387"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b065"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219388"),
                            IsGraduted = false,
                            MajorId = "SJ",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b065"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219389"),
                            IsGraduted = false,
                            MajorId = "CN",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b065"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219390"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b068"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219391"),
                            IsGraduted = false,
                            MajorId = "SJ",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b068"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219392"),
                            IsGraduted = false,
                            MajorId = "CN",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b068"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219393"),
                            IsGraduted = false,
                            MajorId = "GD",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b069"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219394"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b069"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219395"),
                            IsGraduted = false,
                            MajorId = "GD",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b070"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219396"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b070"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219397"),
                            IsGraduted = false,
                            MajorId = "SB",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b071"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219398"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b071"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219399"),
                            IsGraduted = false,
                            MajorId = "SB",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b072"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219400"),
                            IsGraduted = false,
                            MajorId = "CN",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b072"
                        });
                });

            modelBuilder.Entity("Data.Entities.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.HasIndex("StudentId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("Data.Entities.Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("File")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SubjectMentorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectMentorId");

                    b.ToTable("Resource");
                });

            modelBuilder.Entity("Data.Entities.Section", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Section");
                });

            modelBuilder.Entity("Data.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Data.Entities.StudentRegistration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentRegistration");
                });

            modelBuilder.Entity("Data.Entities.Subject", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subject");

                    b.HasData(
                        new
                        {
                            Id = "PRJ001",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(6417),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(6424),
                            IsDeleted = false,
                            Name = "Java OOP"
                        },
                        new
                        {
                            Id = "PRJ002",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(6971),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(6975),
                            IsDeleted = false,
                            Name = "Java Desktop"
                        },
                        new
                        {
                            Id = "PRJ003",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7018),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7019),
                            IsDeleted = false,
                            Name = "Java Web"
                        },
                        new
                        {
                            Id = "PRF001",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7021),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7022),
                            IsDeleted = false,
                            Name = "C"
                        },
                        new
                        {
                            Id = "PRF002",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7024),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7025),
                            IsDeleted = false,
                            Name = "C++"
                        },
                        new
                        {
                            Id = "PRF003",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7027),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7028),
                            IsDeleted = false,
                            Name = "C#"
                        },
                        new
                        {
                            Id = "ENG001",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7029),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7031),
                            IsDeleted = false,
                            Name = "English 1"
                        },
                        new
                        {
                            Id = "ENG002",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7032),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7033),
                            IsDeleted = false,
                            Name = "English 2"
                        },
                        new
                        {
                            Id = "ENG003",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7035),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7036),
                            IsDeleted = false,
                            Name = "English 3"
                        },
                        new
                        {
                            Id = "JPN001",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7038),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7039),
                            IsDeleted = false,
                            Name = "Japanese 1"
                        },
                        new
                        {
                            Id = "JPN002",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7041),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7042),
                            IsDeleted = false,
                            Name = "Japanese 2"
                        },
                        new
                        {
                            Id = "JPN003",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7099),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7101),
                            IsDeleted = false,
                            Name = "Japanese 3"
                        },
                        new
                        {
                            Id = "CNN001",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7103),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7104),
                            IsDeleted = false,
                            Name = "Chinese 1"
                        },
                        new
                        {
                            Id = "CNN002",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7105),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7107),
                            IsDeleted = false,
                            Name = "Chinese 2"
                        },
                        new
                        {
                            Id = "CNN003",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7108),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7109),
                            IsDeleted = false,
                            Name = "Chinese 3"
                        },
                        new
                        {
                            Id = "MKT001",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7111),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7112),
                            IsDeleted = false,
                            Name = "Marketing 1"
                        },
                        new
                        {
                            Id = "MKT002",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7114),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7115),
                            IsDeleted = false,
                            Name = "Marketing 2"
                        },
                        new
                        {
                            Id = "MKT003",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7117),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7118),
                            IsDeleted = false,
                            Name = "Marketing 3"
                        },
                        new
                        {
                            Id = "GDS001",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7120),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7121),
                            IsDeleted = false,
                            Name = "History of Graphic Design"
                        },
                        new
                        {
                            Id = "GDS002",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7123),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7124),
                            IsDeleted = false,
                            Name = "Design Basic"
                        },
                        new
                        {
                            Id = "GDS003",
                            DateCreated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7125),
                            DateUpdated = new DateTime(2021, 10, 31, 10, 4, 44, 96, DateTimeKind.Local).AddTicks(7127),
                            IsDeleted = false,
                            Name = "Design Advance"
                        });
                });

            modelBuilder.Entity("Data.Entities.SubjectMajor", b =>
                {
                    b.Property<string>("MajorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MajorId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectMajor");

                    b.HasData(
                        new
                        {
                            MajorId = "SE",
                            SubjectId = "PRJ001"
                        },
                        new
                        {
                            MajorId = "SE",
                            SubjectId = "PRJ002"
                        },
                        new
                        {
                            MajorId = "SE",
                            SubjectId = "PRJ003"
                        },
                        new
                        {
                            MajorId = "SE",
                            SubjectId = "PRF001"
                        },
                        new
                        {
                            MajorId = "SE",
                            SubjectId = "PRF002"
                        },
                        new
                        {
                            MajorId = "SE",
                            SubjectId = "PRF003"
                        },
                        new
                        {
                            MajorId = "SA",
                            SubjectId = "ENG001"
                        },
                        new
                        {
                            MajorId = "SA",
                            SubjectId = "ENG002"
                        },
                        new
                        {
                            MajorId = "SA",
                            SubjectId = "ENG003"
                        },
                        new
                        {
                            MajorId = "SJ",
                            SubjectId = "JPN001"
                        },
                        new
                        {
                            MajorId = "SJ",
                            SubjectId = "JPN002"
                        },
                        new
                        {
                            MajorId = "SJ",
                            SubjectId = "JPN003"
                        },
                        new
                        {
                            MajorId = "CN",
                            SubjectId = "CNN001"
                        },
                        new
                        {
                            MajorId = "CN",
                            SubjectId = "CNN002"
                        },
                        new
                        {
                            MajorId = "CN",
                            SubjectId = "CNN003"
                        },
                        new
                        {
                            MajorId = "SB",
                            SubjectId = "MKT001"
                        },
                        new
                        {
                            MajorId = "SB",
                            SubjectId = "MKT002"
                        },
                        new
                        {
                            MajorId = "SB",
                            SubjectId = "MKT003"
                        },
                        new
                        {
                            MajorId = "GD",
                            SubjectId = "GDS001"
                        },
                        new
                        {
                            MajorId = "GD",
                            SubjectId = "GDS002"
                        },
                        new
                        {
                            MajorId = "GD",
                            SubjectId = "GDS003"
                        });
                });

            modelBuilder.Entity("Data.Entities.SubjectMentor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MentorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MentorId");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectMentors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4800-962e-a317ab219379"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219379"),
                            Name = "Java OOP",
                            SubjectId = "PRJ001"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4801-962e-a317ab219380"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219380"),
                            Name = "English 1",
                            SubjectId = "ENG001"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4802-962e-a317ab219381"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219381"),
                            Name = "Java Desktop",
                            SubjectId = "PRJ002"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4803-962e-a317ab219382"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219382"),
                            Name = "English 2",
                            SubjectId = "ENG002"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4804-962e-a317ab219383"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219383"),
                            Name = "Java Web",
                            SubjectId = "PRJ003"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4805-962e-a317ab219384"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219384"),
                            Name = "Japanese 1",
                            SubjectId = "JPN001"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4806-962e-a317ab219385"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219385"),
                            Name = "Java OOP",
                            SubjectId = "PRJ001"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4807-962e-a317ab219386"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219386"),
                            Name = "Japanese 2",
                            SubjectId = "JPN002"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4808-962e-a317ab219387"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219387"),
                            Name = "English 3",
                            SubjectId = "ENG003"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4809-962e-a317ab219388"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219388"),
                            Name = "Japanese 3",
                            SubjectId = "JPN003"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4810-962e-a317ab219389"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219389"),
                            Name = "Chinese 1",
                            SubjectId = "CNN001"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4811-962e-a317ab219390"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219390"),
                            Name = "English 1",
                            SubjectId = "ENG001"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4812-962e-a317ab219391"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219391"),
                            Name = "Japanese 1",
                            SubjectId = "JPN001"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4813-962e-a317ab219392"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219392"),
                            Name = "Chinese 2",
                            SubjectId = "CNN002"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4814-962e-a317ab219393"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219393"),
                            Name = "History of Graphic Design",
                            SubjectId = "GDS001"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4815-962e-a317ab219394"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219394"),
                            Name = "English 2",
                            SubjectId = "ENG002"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4816-962e-a317ab219395"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219395"),
                            Name = "Design Basic",
                            SubjectId = "GDS002"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4817-962e-a317ab219396"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219396"),
                            Name = "English 3",
                            SubjectId = "ENG003"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4818-962e-a317ab219397"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219397"),
                            Name = "English 1",
                            SubjectId = "ENG001"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4819-962e-a317ab219398"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219398"),
                            Name = "Marketing 1",
                            SubjectId = "MKT001"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4820-962e-a317ab219399"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219399"),
                            Name = "English 2",
                            SubjectId = "ENG002"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4821-962e-a317ab219400"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219400"),
                            Name = "Marketing 2",
                            SubjectId = "MKT002"
                        });
                });

            modelBuilder.Entity("Data.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double>("Deposit")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Withdraw")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("Data.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDisable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabledMentor")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MajorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("MajorId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b061",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "653e2016-6d5c-4551-bcb9-9b4e94a63278",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp1",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp1",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "986015d6-74ce-43ce-9205-6251863251fe",
                            TwoFactorEnabled = false,
                            UserName = "emp1"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b062",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "8c52f5bd-158b-43fc-b3ef-360cb9429e5c",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp2",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp2",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "db7236ac-e34d-41a3-8440-218d990b7d00",
                            TwoFactorEnabled = false,
                            UserName = "emp2"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b063",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "7d303414-d5d4-4286-8763-f22cdadbb9a4",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp3",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp3",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1b56ae2e-86e0-4e31-bb76-9746629ea25e",
                            TwoFactorEnabled = false,
                            UserName = "emp3"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b064",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "f67427d2-3564-47f6-8ef3-24ad4eed46f5",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp4",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp4",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cfbf5a76-392a-4400-a27e-ba569b87f60a",
                            TwoFactorEnabled = false,
                            UserName = "emp4"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b065",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "a9dec058-7771-4c4d-967f-7197dbeef4c9",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp5",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp5",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bb572006-d99a-4e38-841e-67c0b19b052f",
                            TwoFactorEnabled = false,
                            UserName = "emp5"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b066",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "0a96786d-26d3-43b6-a390-248b8a9f7158",
                            EmailConfirmed = false,
                            Fullname = "Mr. Loc",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "loc",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "42e93f20-df28-4644-8445-b6c26a279188",
                            TwoFactorEnabled = false,
                            UserName = "loc"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b067",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "3dadff30-17d9-4ac0-bed9-938928ce04e3",
                            EmailConfirmed = false,
                            Fullname = "Mr. Tam",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "tam",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "848e5a62-bb48-4401-bcb8-02a6b2c2159c",
                            TwoFactorEnabled = false,
                            UserName = "tam"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b068",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "a8ac3d71-d586-4871-ab77-d055b445e1cb",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp6",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp6",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a54591c8-202f-4a02-b75e-dd36993ce20e",
                            TwoFactorEnabled = false,
                            UserName = "emp6"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b069",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "712a669f-b805-4b25-bd58-e6d2df825d5f",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp7",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp7",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "67a27002-52b2-4530-ad63-9119b5e45c75",
                            TwoFactorEnabled = false,
                            UserName = "emp7"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b070",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d1c25037-f86b-4177-8bcb-155e42962c02",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp8",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp8",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fb06db59-b0ab-48d5-a377-bc1ab2dc19c9",
                            TwoFactorEnabled = false,
                            UserName = "emp8"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b071",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "80c7c2db-f41c-4b46-a59b-1c309692646e",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp9",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp9",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fac14a28-c4ce-4fb1-b5ce-c8ca508a8440",
                            TwoFactorEnabled = false,
                            UserName = "emp9"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b072",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d6a09dff-3af9-4296-a4e1-a43da4e4ebb2",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp10",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp10",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "58f29ed0-39d4-4edc-a90f-e78c8f5c381c",
                            TwoFactorEnabled = false,
                            UserName = "emp10"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b073",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "b083b217-8a20-4dcb-b899-ab818457efc8",
                            EmailConfirmed = false,
                            Fullname = "Mr. Loc1",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "loc1",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ca7db0a6-e69e-4908-b365-9998a98f8e03",
                            TwoFactorEnabled = false,
                            UserName = "loc1"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b074",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "5361964d-e2f2-4ea9-8129-963087512066",
                            EmailConfirmed = false,
                            Fullname = "Mr. Tam1",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "tam1",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4cc9a10b-2aaa-463d-9a76-578b89ab50f3",
                            TwoFactorEnabled = false,
                            UserName = "tam1"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b075",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "594d2018-28eb-4e52-9200-991daa7c561d",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp11",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp11",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a8843d9-4a4c-407e-adfd-5c438e63e59b",
                            TwoFactorEnabled = false,
                            UserName = "emp11"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b076",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d34d9547-871e-452a-b124-ac54c4ab928e",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp12",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp12",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7f29ca89-9031-419d-8bad-be2106a648bc",
                            TwoFactorEnabled = false,
                            UserName = "emp12"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b077",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "e5b23af1-edaa-4ec6-86c5-0480675ad012",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp13",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp13",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "332b49e0-28c4-49d4-94f9-039f576c8b13",
                            TwoFactorEnabled = false,
                            UserName = "emp13"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b078",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "552676cb-f5f0-4a0a-8898-1af40dd466b6",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp14",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp14",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "93a1885b-a57d-4f0a-b2d5-5cc31033fb0f",
                            TwoFactorEnabled = false,
                            UserName = "emp14"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b079",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ab1be6dc-fafb-45e5-9a43-6c980f663121",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp15",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp15",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "04df3edb-e421-4d64-8fd6-dc0ec60584e9",
                            TwoFactorEnabled = false,
                            UserName = "emp15"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b080",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "91a0eb0f-a080-4127-b5c2-941c13bdca29",
                            EmailConfirmed = false,
                            Fullname = "Mr. Loc2",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "loc2",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "066e0be3-835a-41a5-9183-d8d0f8dcae4b",
                            TwoFactorEnabled = false,
                            UserName = "loc2"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b081",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "768f6ea8-9db8-4094-9683-57a01cdd1056",
                            EmailConfirmed = false,
                            Fullname = "Mr. Tam2",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "tam2",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d260958a-c826-48b9-8876-f37248647c89",
                            TwoFactorEnabled = false,
                            UserName = "tam2"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b060",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ab77950c-b6f7-4920-bceb-866fba7c296c",
                            EmailConfirmed = false,
                            Fullname = "Admin Ne`",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "752daee0-9b8d-4e5c-835f-a6645fbe6591",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "ADMIN",
                            ConcurrencyStamp = "ADMIN",
                            Name = "ADMIN",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "MENTOR",
                            ConcurrencyStamp = "MENTOR",
                            Name = "MENTOR",
                            NormalizedName = "MENTOR"
                        },
                        new
                        {
                            Id = "STUDENT",
                            ConcurrencyStamp = "STUDENT",
                            Name = "STUDENT",
                            NormalizedName = "STUDENT"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b060",
                            RoleId = "ADMIN"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b061",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b062",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b063",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b064",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b065",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b066",
                            RoleId = "STUDENT"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b067",
                            RoleId = "STUDENT"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b068",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b069",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b070",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b071",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b072",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b073",
                            RoleId = "STUDENT"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b074",
                            RoleId = "STUDENT"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b075",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b076",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b077",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b078",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b079",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b080",
                            RoleId = "STUDENT"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b081",
                            RoleId = "STUDENT"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Data.Entities.Course", b =>
                {
                    b.HasOne("Data.Entities.Major", "Major")
                        .WithMany()
                        .HasForeignKey("MajorId");

                    b.HasOne("Data.Entities.Mentor", "Mentor")
                        .WithMany("Courses")
                        .HasForeignKey("MentorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId");

                    b.HasOne("Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Data.Entities.Mentor", b =>
                {
                    b.HasOne("Data.Entities.Major", "Major")
                        .WithMany("Mentors")
                        .HasForeignKey("MajorId");

                    b.HasOne("Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Data.Entities.Question", b =>
                {
                    b.HasOne("Data.Entities.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Resource", b =>
                {
                    b.HasOne("Data.Entities.SubjectMentor", "SubjectMentor")
                        .WithMany("Resources")
                        .HasForeignKey("SubjectMentorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Section", b =>
                {
                    b.HasOne("Data.Entities.Course", "Course")
                        .WithMany("Sections")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Student", b =>
                {
                    b.HasOne("Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Data.Entities.StudentRegistration", b =>
                {
                    b.HasOne("Data.Entities.Course", "Course")
                        .WithMany("StudentRegistrations")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Student", "Student")
                        .WithMany("StudentRegistrations")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.SubjectMajor", b =>
                {
                    b.HasOne("Data.Entities.Major", "Major")
                        .WithMany("SubjectMajors")
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.SubjectMentor", b =>
                {
                    b.HasOne("Data.Entities.Mentor", "Mentor")
                        .WithMany("SubjectMentors")
                        .HasForeignKey("MentorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Subject", "Subject")
                        .WithMany("SubjectMentors")
                        .HasForeignKey("SubjectId");
                });

            modelBuilder.Entity("Data.Entities.Transaction", b =>
                {
                    b.HasOne("Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Data.Entities.User", b =>
                {
                    b.HasOne("Data.Entities.Course", null)
                        .WithMany("Users")
                        .HasForeignKey("CourseId");

                    b.HasOne("Data.Entities.Major", "Major")
                        .WithMany("Users")
                        .HasForeignKey("MajorId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
