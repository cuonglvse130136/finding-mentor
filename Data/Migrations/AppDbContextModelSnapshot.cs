// <auto-generated />
using System;
using Data.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("MentorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MentorId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e336"),
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 391, DateTimeKind.Local).AddTicks(1943),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 391, DateTimeKind.Local).AddTicks(1949),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219379"),
                            Name = "Course 1",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "PRJ001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e337"),
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(4934),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(4955),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219381"),
                            Name = "Course 2",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "PRJ002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e338"),
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5064),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5065),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219383"),
                            Name = "Course 3",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "PRJ003"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e339"),
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5080),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5081),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219379"),
                            Name = "Course 4",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "PRF001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e340"),
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5095),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5096),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219381"),
                            Name = "Course 5",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "PRF002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e341"),
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5201),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5202),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219383"),
                            Name = "Course 6",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "PRF003"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e342"),
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5214),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5215),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219387"),
                            Name = "Course 7",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "ENG001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e343"),
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5227),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5228),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219390"),
                            Name = "Course 8",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "ENG002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e344"),
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5237),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5238),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219394"),
                            Name = "Course 9",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "ENG003"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e345"),
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5248),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5250),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219386"),
                            Name = "Course 10",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "JPN001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e346"),
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5259),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5260),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219388"),
                            Name = "Course 11",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "JPN002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e347"),
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5270),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5271),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219391"),
                            Name = "Course 12",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "JPN003"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e348"),
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5280),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5281),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219389"),
                            Name = "Course 13",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "CNN001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e349"),
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5291),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5292),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219392"),
                            Name = "Course 14",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "CNN002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e350"),
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5302),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5303),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219400"),
                            Name = "Course 15",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "CNN003"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e351"),
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5312),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5313),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219397"),
                            Name = "Course 16",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "MKT001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e352"),
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5323),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5324),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219397"),
                            Name = "Course 17",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "MKT002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e353"),
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5333),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5335),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219399"),
                            Name = "Course 18",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "MKT003"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e354"),
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5344),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5345),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219393"),
                            Name = "Course 19",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "GDS001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e355"),
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5354),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5355),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219395"),
                            Name = "Course 20",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "GDS002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e356"),
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5364),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 393, DateTimeKind.Local).AddTicks(5365),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219395"),
                            Name = "Course 21",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "GDS003"
                        });
                });

            modelBuilder.Entity("Data.Entities.Major", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Major");

                    b.HasData(
                        new
                        {
                            Id = "SE",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 389, DateTimeKind.Local).AddTicks(3978),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(2743),
                            IsDeleted = false,
                            Name = "Software Engineering"
                        },
                        new
                        {
                            Id = "SB",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(3506),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(3510),
                            IsDeleted = false,
                            Name = "Economic"
                        },
                        new
                        {
                            Id = "SA",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(3525),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(3527),
                            IsDeleted = false,
                            Name = "English"
                        },
                        new
                        {
                            Id = "CN",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(3528),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(3529),
                            IsDeleted = false,
                            Name = "Chinese"
                        },
                        new
                        {
                            Id = "SJ",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(3531),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(3532),
                            IsDeleted = false,
                            Name = "Japanese"
                        },
                        new
                        {
                            Id = "GD",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(3580),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(3582),
                            IsDeleted = false,
                            Name = "Graphic Design"
                        });
                });

            modelBuilder.Entity("Data.Entities.Mentor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsGraduted")
                        .HasColumnType("bit");

                    b.Property<string>("MajorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MajorId");

                    b.HasIndex("UserId");

                    b.ToTable("Mentor");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219379"),
                            IsGraduted = false,
                            MajorId = "SE",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b061"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219380"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b061"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219381"),
                            IsGraduted = false,
                            MajorId = "SE",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b062"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219382"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b062"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219383"),
                            IsGraduted = false,
                            MajorId = "SE",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b063"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219384"),
                            IsGraduted = false,
                            MajorId = "SJ",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b063"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219385"),
                            IsGraduted = false,
                            MajorId = "SE",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b064"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219386"),
                            IsGraduted = false,
                            MajorId = "SJ",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b064"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219387"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b065"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219388"),
                            IsGraduted = false,
                            MajorId = "SJ",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b065"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219389"),
                            IsGraduted = false,
                            MajorId = "CN",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b065"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219390"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b068"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219391"),
                            IsGraduted = false,
                            MajorId = "SJ",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b068"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219392"),
                            IsGraduted = false,
                            MajorId = "CN",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b068"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219393"),
                            IsGraduted = false,
                            MajorId = "GD",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b069"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219394"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b069"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219395"),
                            IsGraduted = false,
                            MajorId = "GD",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b070"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219396"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b070"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219397"),
                            IsGraduted = false,
                            MajorId = "SB",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b071"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219398"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b071"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219399"),
                            IsGraduted = false,
                            MajorId = "SB",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b072"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219400"),
                            IsGraduted = false,
                            MajorId = "CN",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b072"
                        });
                });

            modelBuilder.Entity("Data.Entities.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.HasIndex("StudentId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("Data.Entities.Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("File")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SubjectMentorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectMentorId");

                    b.ToTable("Resource");
                });

            modelBuilder.Entity("Data.Entities.Section", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Section");
                });

            modelBuilder.Entity("Data.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Data.Entities.StudentRegistration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentRegistration");
                });

            modelBuilder.Entity("Data.Entities.Subject", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subject");

                    b.HasData(
                        new
                        {
                            Id = "PRJ001",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9159),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9165),
                            IsDeleted = false,
                            Name = "Java OOP"
                        },
                        new
                        {
                            Id = "PRJ002",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9733),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9736),
                            IsDeleted = false,
                            Name = "Java Desktop"
                        },
                        new
                        {
                            Id = "PRJ003",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9753),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9754),
                            IsDeleted = false,
                            Name = "Java Web"
                        },
                        new
                        {
                            Id = "PRF001",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9756),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9757),
                            IsDeleted = false,
                            Name = "C"
                        },
                        new
                        {
                            Id = "PRF002",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9759),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9760),
                            IsDeleted = false,
                            Name = "C++"
                        },
                        new
                        {
                            Id = "PRF003",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9762),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9763),
                            IsDeleted = false,
                            Name = "C#"
                        },
                        new
                        {
                            Id = "ENG001",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9765),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9766),
                            IsDeleted = false,
                            Name = "English 1"
                        },
                        new
                        {
                            Id = "ENG002",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9768),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9769),
                            IsDeleted = false,
                            Name = "English 2"
                        },
                        new
                        {
                            Id = "ENG003",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9770),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9771),
                            IsDeleted = false,
                            Name = "English 3"
                        },
                        new
                        {
                            Id = "JPN001",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9773),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9774),
                            IsDeleted = false,
                            Name = "Japanese 1"
                        },
                        new
                        {
                            Id = "JPN002",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9776),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9777),
                            IsDeleted = false,
                            Name = "Japanese 2"
                        },
                        new
                        {
                            Id = "JPN003",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9778),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9779),
                            IsDeleted = false,
                            Name = "Japanese 3"
                        },
                        new
                        {
                            Id = "CNN001",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9781),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9782),
                            IsDeleted = false,
                            Name = "Chinese 1"
                        },
                        new
                        {
                            Id = "CNN002",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9784),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9785),
                            IsDeleted = false,
                            Name = "Chinese 2"
                        },
                        new
                        {
                            Id = "CNN003",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9787),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9788),
                            IsDeleted = false,
                            Name = "Chinese 3"
                        },
                        new
                        {
                            Id = "MKT001",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9790),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9791),
                            IsDeleted = false,
                            Name = "Marketing 1"
                        },
                        new
                        {
                            Id = "MKT002",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9792),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9793),
                            IsDeleted = false,
                            Name = "Marketing 2"
                        },
                        new
                        {
                            Id = "MKT003",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9795),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9796),
                            IsDeleted = false,
                            Name = "Marketing 3"
                        },
                        new
                        {
                            Id = "GDS001",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9798),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9799),
                            IsDeleted = false,
                            Name = "History of Graphic Design"
                        },
                        new
                        {
                            Id = "GDS002",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9800),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9801),
                            IsDeleted = false,
                            Name = "Design Basic"
                        },
                        new
                        {
                            Id = "GDS003",
                            DateCreated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9803),
                            DateUpdated = new DateTime(2021, 10, 28, 9, 41, 42, 390, DateTimeKind.Local).AddTicks(9804),
                            IsDeleted = false,
                            Name = "Design Advance"
                        });
                });

            modelBuilder.Entity("Data.Entities.SubjectMajor", b =>
                {
                    b.Property<string>("MajorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MajorId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectMajor");

                    b.HasData(
                        new
                        {
                            MajorId = "SE",
                            SubjectId = "PRJ001"
                        },
                        new
                        {
                            MajorId = "SE",
                            SubjectId = "PRJ002"
                        },
                        new
                        {
                            MajorId = "SE",
                            SubjectId = "PRJ003"
                        },
                        new
                        {
                            MajorId = "SE",
                            SubjectId = "PRF001"
                        },
                        new
                        {
                            MajorId = "SE",
                            SubjectId = "PRF002"
                        },
                        new
                        {
                            MajorId = "SE",
                            SubjectId = "PRF003"
                        },
                        new
                        {
                            MajorId = "SA",
                            SubjectId = "ENG001"
                        },
                        new
                        {
                            MajorId = "SA",
                            SubjectId = "ENG002"
                        },
                        new
                        {
                            MajorId = "SA",
                            SubjectId = "ENG003"
                        },
                        new
                        {
                            MajorId = "SJ",
                            SubjectId = "JPN001"
                        },
                        new
                        {
                            MajorId = "SJ",
                            SubjectId = "JPN002"
                        },
                        new
                        {
                            MajorId = "SJ",
                            SubjectId = "JPN003"
                        },
                        new
                        {
                            MajorId = "CN",
                            SubjectId = "CNN001"
                        },
                        new
                        {
                            MajorId = "CN",
                            SubjectId = "CNN002"
                        },
                        new
                        {
                            MajorId = "CN",
                            SubjectId = "CNN003"
                        },
                        new
                        {
                            MajorId = "SB",
                            SubjectId = "MKT001"
                        },
                        new
                        {
                            MajorId = "SB",
                            SubjectId = "MKT002"
                        },
                        new
                        {
                            MajorId = "SB",
                            SubjectId = "MKT003"
                        },
                        new
                        {
                            MajorId = "GD",
                            SubjectId = "GDS001"
                        },
                        new
                        {
                            MajorId = "GD",
                            SubjectId = "GDS002"
                        },
                        new
                        {
                            MajorId = "GD",
                            SubjectId = "GDS003"
                        });
                });

            modelBuilder.Entity("Data.Entities.SubjectMentor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MentorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MentorId");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectMentors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4800-962e-a317ab219379"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219379"),
                            Name = "Java OOP",
                            SubjectId = "PRJ001"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4801-962e-a317ab219380"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219380"),
                            Name = "English 1",
                            SubjectId = "ENG001"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4802-962e-a317ab219381"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219381"),
                            Name = "Java Desktop",
                            SubjectId = "PRJ002"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4803-962e-a317ab219382"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219382"),
                            Name = "English 2",
                            SubjectId = "ENG002"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4804-962e-a317ab219383"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219383"),
                            Name = "Java Web",
                            SubjectId = "PRJ003"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4805-962e-a317ab219384"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219384"),
                            Name = "Japanese 1",
                            SubjectId = "JPN001"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4806-962e-a317ab219385"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219385"),
                            Name = "Java OOP",
                            SubjectId = "PRJ001"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4807-962e-a317ab219386"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219386"),
                            Name = "Japanese 2",
                            SubjectId = "JPN002"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4808-962e-a317ab219387"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219387"),
                            Name = "English 3",
                            SubjectId = "ENG003"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4809-962e-a317ab219388"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219388"),
                            Name = "Japanese 3",
                            SubjectId = "JPN003"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4810-962e-a317ab219389"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219389"),
                            Name = "Chinese 1",
                            SubjectId = "CNN001"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4811-962e-a317ab219390"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219390"),
                            Name = "English 1",
                            SubjectId = "ENG001"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4812-962e-a317ab219391"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219391"),
                            Name = "Japanese 1",
                            SubjectId = "JPN001"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4813-962e-a317ab219392"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219392"),
                            Name = "Chinese 2",
                            SubjectId = "CNN002"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4814-962e-a317ab219393"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219393"),
                            Name = "History of Graphic Design",
                            SubjectId = "GDS001"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4815-962e-a317ab219394"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219394"),
                            Name = "English 2",
                            SubjectId = "ENG002"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4816-962e-a317ab219395"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219395"),
                            Name = "Design Basic",
                            SubjectId = "GDS002"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4817-962e-a317ab219396"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219396"),
                            Name = "English 3",
                            SubjectId = "ENG003"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4818-962e-a317ab219397"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219397"),
                            Name = "English 1",
                            SubjectId = "ENG001"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4819-962e-a317ab219398"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219398"),
                            Name = "Marketing 1",
                            SubjectId = "MKT001"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4820-962e-a317ab219399"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219399"),
                            Name = "English 2",
                            SubjectId = "ENG002"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4821-962e-a317ab219400"),
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219400"),
                            Name = "Marketing 2",
                            SubjectId = "MKT002"
                        });
                });

            modelBuilder.Entity("Data.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double>("Deposit")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Withdraw")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("Data.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDisable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabledMentor")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MajorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("MajorId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b061",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "6c0e9948-3972-4892-9898-5e759f377e82",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp1",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp1",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "37e0073f-37d6-4510-9f8f-3834dbd90c08",
                            TwoFactorEnabled = false,
                            UserName = "emp1"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b062",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "771f9ee4-9829-486d-872d-d4f5bd834032",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp2",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp2",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1ecf8520-a21d-45b3-a952-a164e6d3f133",
                            TwoFactorEnabled = false,
                            UserName = "emp2"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b063",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "409a6079-f93e-4d86-bf8e-2f0562797dbb",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp3",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp3",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "26f4d385-be73-4bc5-aef1-cdc3ca7674df",
                            TwoFactorEnabled = false,
                            UserName = "emp3"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b064",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "f08c6418-1d64-48ae-8a87-fd47bed34929",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp4",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp4",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9b3085e7-22f3-42e1-8b17-9f9a855f8e51",
                            TwoFactorEnabled = false,
                            UserName = "emp4"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b065",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "1a774a46-b14d-4d34-a9f8-54fb5bde16fb",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp5",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp5",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c6ef75a6-d74a-4d4b-a457-7a705f3b9d01",
                            TwoFactorEnabled = false,
                            UserName = "emp5"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b066",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "55be1223-2a4a-4eb7-a759-1c90e04f30b5",
                            EmailConfirmed = false,
                            Fullname = "Mr. Loc",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "loc",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "23153b3a-7b93-434b-a919-75f49458ede2",
                            TwoFactorEnabled = false,
                            UserName = "loc"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b067",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "55a56b22-30da-4618-a740-e10dbfe54729",
                            EmailConfirmed = false,
                            Fullname = "Mr. Tam",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "tam",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "72143818-2531-4075-9263-c29ac679f989",
                            TwoFactorEnabled = false,
                            UserName = "tam"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b068",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "e75531bc-e93d-4d8c-b5f7-d6db1535ed92",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp6",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp6",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5f6adeb9-69e3-43df-871a-df894cb36cf9",
                            TwoFactorEnabled = false,
                            UserName = "emp6"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b069",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "03bc568b-3f36-46a0-8916-3616865dc216",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp7",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp7",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "30c15a14-0c69-490c-9803-7a7abea1b177",
                            TwoFactorEnabled = false,
                            UserName = "emp7"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b070",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "0043b57b-e1e3-43c2-8c1d-b3ee62aa39a4",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp8",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp8",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5136e5cc-7deb-443e-ba8e-a83ccd330066",
                            TwoFactorEnabled = false,
                            UserName = "emp8"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b071",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ad7d870e-3838-46a1-9a62-f81fd19b734e",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp9",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp9",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e30d7af4-551c-4f27-99e1-7c3698a5d1e8",
                            TwoFactorEnabled = false,
                            UserName = "emp9"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b072",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "88673459-e371-42ae-ac2e-12cd24fd4850",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp10",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp10",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4622bfb9-40ad-42c2-9604-fbbbb59c4917",
                            TwoFactorEnabled = false,
                            UserName = "emp10"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b073",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "422701cd-3347-4b53-a62a-17759a9bc5e5",
                            EmailConfirmed = false,
                            Fullname = "Mr. Loc1",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "loc1",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7e7ab28c-fb3c-4b00-ae04-128692f01127",
                            TwoFactorEnabled = false,
                            UserName = "loc1"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b074",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "0eb3b26b-0686-47ac-8a1e-b1958b12d4e1",
                            EmailConfirmed = false,
                            Fullname = "Mr. Tam1",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "tam1",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "767537f4-8603-42dc-ba3c-1b28c2ef0149",
                            TwoFactorEnabled = false,
                            UserName = "tam1"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b075",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "bb6bff6a-31df-4846-9894-7d85bd55028c",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp11",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp11",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e2e3c85a-ab81-47a8-8fd8-8f9ca49debde",
                            TwoFactorEnabled = false,
                            UserName = "emp11"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b076",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "4067f8e9-798c-486b-a0d1-3e7484ff5484",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp12",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp12",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a0789922-4101-480d-9394-128712e92bf9",
                            TwoFactorEnabled = false,
                            UserName = "emp12"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b077",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "73040d64-15a0-4251-9dd6-3fc874fac4af",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp13",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp13",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a93ea445-8e13-4530-9ebd-1c03fcda2e07",
                            TwoFactorEnabled = false,
                            UserName = "emp13"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b078",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "c03bab15-2c84-4bda-81c4-55e156adf32d",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp14",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp14",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0cf314cd-2052-4a4a-9975-04055bcf5778",
                            TwoFactorEnabled = false,
                            UserName = "emp14"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b079",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "472aa753-653f-467c-8abc-e56c133baf89",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp15",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp15",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7e76ae8e-f6b0-41ff-8ebc-72d5ba0c841c",
                            TwoFactorEnabled = false,
                            UserName = "emp15"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b080",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "22627616-56e6-4b28-ba8d-8d39b8a0c655",
                            EmailConfirmed = false,
                            Fullname = "Mr. Loc2",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "loc2",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ce7a000e-0496-405e-886a-2c0bd4103c39",
                            TwoFactorEnabled = false,
                            UserName = "loc2"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b081",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "fc4d1fb3-390d-4c0d-9ec9-78075bf18ebd",
                            EmailConfirmed = false,
                            Fullname = "Mr. Tam2",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "tam2",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0b8af151-5e57-474a-961e-7dfcd652af36",
                            TwoFactorEnabled = false,
                            UserName = "tam2"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b060",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "865ab79a-edc8-4d0a-a0a9-3da734807cf0",
                            EmailConfirmed = false,
                            Fullname = "Admin Ne`",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a3c402b3-6ee8-4966-9240-8d655058c636",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "ADMIN",
                            ConcurrencyStamp = "ADMIN",
                            Name = "ADMIN",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "MENTOR",
                            ConcurrencyStamp = "MENTOR",
                            Name = "MENTOR",
                            NormalizedName = "MENTOR"
                        },
                        new
                        {
                            Id = "STUDENT",
                            ConcurrencyStamp = "STUDENT",
                            Name = "STUDENT",
                            NormalizedName = "STUDENT"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b060",
                            RoleId = "ADMIN"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b061",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b062",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b063",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b064",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b065",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b066",
                            RoleId = "STUDENT"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b067",
                            RoleId = "STUDENT"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b068",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b069",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b070",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b071",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b072",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b073",
                            RoleId = "STUDENT"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b074",
                            RoleId = "STUDENT"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b075",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b076",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b077",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b078",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b079",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b080",
                            RoleId = "STUDENT"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b081",
                            RoleId = "STUDENT"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Data.Entities.Course", b =>
                {
                    b.HasOne("Data.Entities.Mentor", "Mentor")
                        .WithMany("Courses")
                        .HasForeignKey("MentorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId");
                });

            modelBuilder.Entity("Data.Entities.Mentor", b =>
                {
                    b.HasOne("Data.Entities.Major", "Major")
                        .WithMany("Mentors")
                        .HasForeignKey("MajorId");

                    b.HasOne("Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Data.Entities.Question", b =>
                {
                    b.HasOne("Data.Entities.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Resource", b =>
                {
                    b.HasOne("Data.Entities.SubjectMentor", "SubjectMentor")
                        .WithMany("Resources")
                        .HasForeignKey("SubjectMentorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Section", b =>
                {
                    b.HasOne("Data.Entities.Course", "Course")
                        .WithMany("Sections")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Student", b =>
                {
                    b.HasOne("Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Data.Entities.StudentRegistration", b =>
                {
                    b.HasOne("Data.Entities.Course", "Course")
                        .WithMany("StudentRegistrations")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Student", "Student")
                        .WithMany("StudentRegistrations")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.SubjectMajor", b =>
                {
                    b.HasOne("Data.Entities.Major", "Major")
                        .WithMany("SubjectMajors")
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.SubjectMentor", b =>
                {
                    b.HasOne("Data.Entities.Mentor", "Mentor")
                        .WithMany("SubjectMentors")
                        .HasForeignKey("MentorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Subject", "Subject")
                        .WithMany("SubjectMentors")
                        .HasForeignKey("SubjectId");
                });

            modelBuilder.Entity("Data.Entities.Transaction", b =>
                {
                    b.HasOne("Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Data.Entities.User", b =>
                {
                    b.HasOne("Data.Entities.Major", "Major")
                        .WithMany("Users")
                        .HasForeignKey("MajorId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
