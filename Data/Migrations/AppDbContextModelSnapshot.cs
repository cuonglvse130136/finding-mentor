// <auto-generated />
using System;
using Data.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("MentorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MentorId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e336"),
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(6873),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(6879),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219379"),
                            Name = "Course 1",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "PRJ001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e337"),
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9193),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9212),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219381"),
                            Name = "Course 2",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "PRJ002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e338"),
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9333),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9334),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219383"),
                            Name = "Course 3",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "PRJ003"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e339"),
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9350),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9351),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219379"),
                            Name = "Course 4",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "PRF001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e340"),
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9364),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9365),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219381"),
                            Name = "Course 5",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "PRF002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e341"),
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9376),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9377),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219383"),
                            Name = "Course 6",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "PRF003"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e342"),
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9387),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9388),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219387"),
                            Name = "Course 7",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "ENG001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e343"),
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9398),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9399),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219390"),
                            Name = "Course 8",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "ENG002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e344"),
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9410),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9411),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219394"),
                            Name = "Course 9",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "ENG003"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e345"),
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9420),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9421),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219386"),
                            Name = "Course 10",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "JPN001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e346"),
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9430),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9432),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219388"),
                            Name = "Course 11",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "JPN002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e347"),
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9441),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9442),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219391"),
                            Name = "Course 12",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "JPN003"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e348"),
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9452),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9453),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219389"),
                            Name = "Course 13",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "CNN001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e349"),
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9462),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9463),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219392"),
                            Name = "Course 14",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "CNN002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e350"),
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9473),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9474),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219400"),
                            Name = "Course 15",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "CNN003"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e351"),
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9483),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9484),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219397"),
                            Name = "Course 16",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "MKT001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e352"),
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9494),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9495),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219397"),
                            Name = "Course 17",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "MKT002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e353"),
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9504),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9505),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219399"),
                            Name = "Course 18",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "MKT003"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e354"),
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9515),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9516),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219393"),
                            Name = "Course 19",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "GDS001"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e355"),
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9526),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9527),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219395"),
                            Name = "Course 20",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "GDS002"
                        },
                        new
                        {
                            Id = new Guid("1d6940a7-7035-4bc0-baa4-06174e05e356"),
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9536),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 761, DateTimeKind.Local).AddTicks(9537),
                            IsDeleted = false,
                            MentorId = new Guid("3f0c7479-25cd-4863-962e-a317ab219395"),
                            Name = "Course 21",
                            Price = 100.0,
                            Rating = 0,
                            StartDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = "GDS003"
                        });
                });

            modelBuilder.Entity("Data.Entities.Major", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Major");

                    b.HasData(
                        new
                        {
                            Id = "SE",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 757, DateTimeKind.Local).AddTicks(6678),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 758, DateTimeKind.Local).AddTicks(8515),
                            IsDeleted = false,
                            Name = "Software Engineering"
                        },
                        new
                        {
                            Id = "SB",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 758, DateTimeKind.Local).AddTicks(9643),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 758, DateTimeKind.Local).AddTicks(9647),
                            IsDeleted = false,
                            Name = "Economic"
                        },
                        new
                        {
                            Id = "SA",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 758, DateTimeKind.Local).AddTicks(9665),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 758, DateTimeKind.Local).AddTicks(9666),
                            IsDeleted = false,
                            Name = "English"
                        },
                        new
                        {
                            Id = "CN",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 758, DateTimeKind.Local).AddTicks(9668),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 758, DateTimeKind.Local).AddTicks(9669),
                            IsDeleted = false,
                            Name = "Chinese"
                        },
                        new
                        {
                            Id = "SJ",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 758, DateTimeKind.Local).AddTicks(9671),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 758, DateTimeKind.Local).AddTicks(9672),
                            IsDeleted = false,
                            Name = "Japanese"
                        },
                        new
                        {
                            Id = "GD",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 758, DateTimeKind.Local).AddTicks(9674),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 758, DateTimeKind.Local).AddTicks(9675),
                            IsDeleted = false,
                            Name = "Graphic Design"
                        });
                });

            modelBuilder.Entity("Data.Entities.Mentor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsGraduted")
                        .HasColumnType("bit");

                    b.Property<string>("MajorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MajorId");

                    b.HasIndex("UserId");

                    b.ToTable("Mentor");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219379"),
                            IsGraduted = false,
                            MajorId = "SE",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b061"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219380"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b061"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219381"),
                            IsGraduted = false,
                            MajorId = "SE",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b062"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219382"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b062"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219383"),
                            IsGraduted = false,
                            MajorId = "SE",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b063"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219384"),
                            IsGraduted = false,
                            MajorId = "SJ",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b063"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219385"),
                            IsGraduted = false,
                            MajorId = "SE",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b064"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219386"),
                            IsGraduted = false,
                            MajorId = "SJ",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b064"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219387"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b065"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219388"),
                            IsGraduted = false,
                            MajorId = "SJ",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b065"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219389"),
                            IsGraduted = false,
                            MajorId = "CN",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b065"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219390"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b068"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219391"),
                            IsGraduted = false,
                            MajorId = "SJ",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b068"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219392"),
                            IsGraduted = false,
                            MajorId = "CN",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b068"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219393"),
                            IsGraduted = false,
                            MajorId = "GD",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b069"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219394"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b069"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219395"),
                            IsGraduted = false,
                            MajorId = "GD",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b070"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219396"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b070"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219397"),
                            IsGraduted = false,
                            MajorId = "SB",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b071"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219398"),
                            IsGraduted = false,
                            MajorId = "SA",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b071"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219399"),
                            IsGraduted = false,
                            MajorId = "SB",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b072"
                        },
                        new
                        {
                            Id = new Guid("3f0c7479-25cd-4863-962e-a317ab219400"),
                            IsGraduted = false,
                            MajorId = "CN",
                            Rating = 0,
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b072"
                        });
                });

            modelBuilder.Entity("Data.Entities.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.HasIndex("StudentId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("Data.Entities.Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("File")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SubjectMentorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectMentorId");

                    b.ToTable("Resource");
                });

            modelBuilder.Entity("Data.Entities.Section", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Section");
                });

            modelBuilder.Entity("Data.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Data.Entities.StudentRegistration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentRegistration");
                });

            modelBuilder.Entity("Data.Entities.Subject", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subject");

                    b.HasData(
                        new
                        {
                            Id = "PRJ001",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4002),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4009),
                            IsDeleted = false,
                            Name = "Java OOP"
                        },
                        new
                        {
                            Id = "PRJ002",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4577),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4581),
                            IsDeleted = false,
                            Name = "Java Desktop"
                        },
                        new
                        {
                            Id = "PRJ003",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4611),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4612),
                            IsDeleted = false,
                            Name = "Java Web"
                        },
                        new
                        {
                            Id = "PRF001",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4614),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4615),
                            IsDeleted = false,
                            Name = "C"
                        },
                        new
                        {
                            Id = "PRF002",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4617),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4618),
                            IsDeleted = false,
                            Name = "C++"
                        },
                        new
                        {
                            Id = "PRF003",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4620),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4621),
                            IsDeleted = false,
                            Name = "C#"
                        },
                        new
                        {
                            Id = "ENG001",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4623),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4624),
                            IsDeleted = false,
                            Name = "English 1"
                        },
                        new
                        {
                            Id = "ENG002",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4626),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4627),
                            IsDeleted = false,
                            Name = "English 2"
                        },
                        new
                        {
                            Id = "ENG003",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4628),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4629),
                            IsDeleted = false,
                            Name = "English 3"
                        },
                        new
                        {
                            Id = "JPN001",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4631),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4632),
                            IsDeleted = false,
                            Name = "Japanese 1"
                        },
                        new
                        {
                            Id = "JPN002",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4634),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4635),
                            IsDeleted = false,
                            Name = "Japanese 2"
                        },
                        new
                        {
                            Id = "JPN003",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4637),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4638),
                            IsDeleted = false,
                            Name = "Japanese 3"
                        },
                        new
                        {
                            Id = "CNN001",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4639),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4640),
                            IsDeleted = false,
                            Name = "Chinese 1"
                        },
                        new
                        {
                            Id = "CNN002",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4642),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4643),
                            IsDeleted = false,
                            Name = "Chinese 2"
                        },
                        new
                        {
                            Id = "CNN003",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4645),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4646),
                            IsDeleted = false,
                            Name = "Chinese 3"
                        },
                        new
                        {
                            Id = "MKT001",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4648),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4649),
                            IsDeleted = false,
                            Name = "Marketing 1"
                        },
                        new
                        {
                            Id = "MKT002",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4651),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4652),
                            IsDeleted = false,
                            Name = "Marketing 2"
                        },
                        new
                        {
                            Id = "MKT003",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4653),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4655),
                            IsDeleted = false,
                            Name = "Marketing 3"
                        },
                        new
                        {
                            Id = "GDS001",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4656),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4657),
                            IsDeleted = false,
                            Name = "History of Graphic Design"
                        },
                        new
                        {
                            Id = "GDS002",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4659),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4660),
                            IsDeleted = false,
                            Name = "Design Basic"
                        },
                        new
                        {
                            Id = "GDS003",
                            DateCreated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4662),
                            DateUpdated = new DateTime(2021, 10, 27, 23, 6, 18, 759, DateTimeKind.Local).AddTicks(4663),
                            IsDeleted = false,
                            Name = "Design Advance"
                        });
                });

            modelBuilder.Entity("Data.Entities.SubjectMajor", b =>
                {
                    b.Property<string>("MajorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MajorId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectMajor");

                    b.HasData(
                        new
                        {
                            MajorId = "SE",
                            SubjectId = "PRJ001"
                        },
                        new
                        {
                            MajorId = "SE",
                            SubjectId = "PRJ002"
                        },
                        new
                        {
                            MajorId = "SE",
                            SubjectId = "PRJ003"
                        },
                        new
                        {
                            MajorId = "SE",
                            SubjectId = "PRF001"
                        },
                        new
                        {
                            MajorId = "SE",
                            SubjectId = "PRF002"
                        },
                        new
                        {
                            MajorId = "SE",
                            SubjectId = "PRF003"
                        },
                        new
                        {
                            MajorId = "SA",
                            SubjectId = "ENG001"
                        },
                        new
                        {
                            MajorId = "SA",
                            SubjectId = "ENG002"
                        },
                        new
                        {
                            MajorId = "SA",
                            SubjectId = "ENG003"
                        },
                        new
                        {
                            MajorId = "SJ",
                            SubjectId = "JPN001"
                        },
                        new
                        {
                            MajorId = "SJ",
                            SubjectId = "JPN002"
                        },
                        new
                        {
                            MajorId = "SJ",
                            SubjectId = "JPN003"
                        },
                        new
                        {
                            MajorId = "CN",
                            SubjectId = "CNN001"
                        },
                        new
                        {
                            MajorId = "CN",
                            SubjectId = "CNN002"
                        },
                        new
                        {
                            MajorId = "CN",
                            SubjectId = "CNN003"
                        },
                        new
                        {
                            MajorId = "SB",
                            SubjectId = "MKT001"
                        },
                        new
                        {
                            MajorId = "SB",
                            SubjectId = "MKT002"
                        },
                        new
                        {
                            MajorId = "SB",
                            SubjectId = "MKT003"
                        },
                        new
                        {
                            MajorId = "GD",
                            SubjectId = "GDS001"
                        },
                        new
                        {
                            MajorId = "GD",
                            SubjectId = "GDS002"
                        },
                        new
                        {
                            MajorId = "GD",
                            SubjectId = "GDS003"
                        });
                });

            modelBuilder.Entity("Data.Entities.SubjectMentor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MentorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MentorId");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectMentors");
                });

            modelBuilder.Entity("Data.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double>("Deposit")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Withdraw")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("Data.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDisable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabledMentor")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MajorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("MajorId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b061",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "370adc20-33ac-4394-ae9f-03df5b9d93b7",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp1",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp1",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e72c9f6c-18a1-4758-bcac-a5efb35cfa96",
                            TwoFactorEnabled = false,
                            UserName = "emp1"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b062",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "97ae136f-db23-40ec-8401-94f3ba843984",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp2",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp2",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8602e840-3683-4097-8b6f-01aa8e743057",
                            TwoFactorEnabled = false,
                            UserName = "emp2"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b063",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "6ed844a8-c52e-4b8f-9b92-10890b9fc494",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp3",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp3",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "416a0655-af21-4da0-89d6-21908e4fbfba",
                            TwoFactorEnabled = false,
                            UserName = "emp3"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b064",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "5821311f-e870-4c96-84e7-daa9504c109d",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp4",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp4",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b86f0d0f-9bd3-4992-9d42-0f298b574459",
                            TwoFactorEnabled = false,
                            UserName = "emp4"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b065",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "2d84d799-c5f3-4478-9e25-9098898b9dea",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp5",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp5",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6b03e96d-872b-40f4-9a73-d08d292e3ad4",
                            TwoFactorEnabled = false,
                            UserName = "emp5"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b066",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "74e04604-9166-4d2d-a267-5289a2970670",
                            EmailConfirmed = false,
                            Fullname = "Mr. Loc",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "loc",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7da1c7d5-bd37-47e6-93f9-086bce02cb5d",
                            TwoFactorEnabled = false,
                            UserName = "loc"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b067",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "7c7e6fc2-14d2-474e-9cda-664e1e22d43d",
                            EmailConfirmed = false,
                            Fullname = "Mr. Tam",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "tam",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1215536c-4dda-4330-ac68-e3158d8bc9dc",
                            TwoFactorEnabled = false,
                            UserName = "tam"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b068",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "fcd0fcdd-c399-40a3-a488-d219e9fcbdb2",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp6",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp6",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2790e526-e171-4637-ac3d-7517d9a25937",
                            TwoFactorEnabled = false,
                            UserName = "emp6"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b069",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ce3229ad-4323-4ace-8382-060209471382",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp7",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp7",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "95782c0a-0b69-47eb-9642-fe570c6a3978",
                            TwoFactorEnabled = false,
                            UserName = "emp7"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b070",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "4459c637-4a5c-4c2b-843d-2216a1da8809",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp8",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp8",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "64be416d-a7f3-4849-add4-d6127e14d873",
                            TwoFactorEnabled = false,
                            UserName = "emp8"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b071",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "b09ba3bd-4fb1-4201-bf9d-dc88bbba482d",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp9",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp9",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e8df0939-5e82-4dbe-82f4-73d3967886a4",
                            TwoFactorEnabled = false,
                            UserName = "emp9"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b072",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "0c4b8993-2d1f-4e3f-aded-317666e8d750",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp10",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp10",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8d2386c6-4bde-4822-8e03-1aad0d2fe43b",
                            TwoFactorEnabled = false,
                            UserName = "emp10"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b073",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "8357e033-7b75-4e5a-a776-437d2a66d6c7",
                            EmailConfirmed = false,
                            Fullname = "Mr. Loc1",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "loc1",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8b8d0885-370c-4340-99e0-831e55520577",
                            TwoFactorEnabled = false,
                            UserName = "loc1"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b074",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "0c7a284c-f236-4771-a13c-d993b80c388a",
                            EmailConfirmed = false,
                            Fullname = "Mr. Tam1",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "tam1",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5f7b1e5d-99b7-4f0a-bd3e-8b2ed85420d7",
                            TwoFactorEnabled = false,
                            UserName = "tam1"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b075",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "9e78b50b-054f-4217-a203-6a3c3fa37c20",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp11",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp11",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "729259ba-ac67-45a3-b590-7548439b7962",
                            TwoFactorEnabled = false,
                            UserName = "emp11"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b076",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "f15cf7ab-b5b0-41fc-89fc-08b49f3ae32d",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp12",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp12",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "80b7a5f7-e3c3-42e6-8a33-ad4e9a524d90",
                            TwoFactorEnabled = false,
                            UserName = "emp12"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b077",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "70270b4d-1055-4d55-9fda-67b0d424c744",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp13",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp13",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6fb7f4b3-5251-4210-8bff-2faa65fc10fe",
                            TwoFactorEnabled = false,
                            UserName = "emp13"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b078",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "0f941c25-c35e-4e0c-8028-7c68c5756455",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp14",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp14",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "605218a5-6280-40e7-bf29-4dd9122f989b",
                            TwoFactorEnabled = false,
                            UserName = "emp14"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b079",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "c80e24f7-0dcb-4f34-b354-27a06f28d800",
                            EmailConfirmed = false,
                            Fullname = "Mr. Emp15",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "emp15",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7f39f263-0d06-4b01-bc18-5fdd8cc2d321",
                            TwoFactorEnabled = false,
                            UserName = "emp15"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b080",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "3b0b188a-6aa8-415b-a5ea-7dc2f8e653cd",
                            EmailConfirmed = false,
                            Fullname = "Mr. Loc2",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "loc2",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "24a52112-8109-4ecb-a540-e2e4bee3fe88",
                            TwoFactorEnabled = false,
                            UserName = "loc2"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b081",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "7414204d-4cf6-4739-ba68-0ea7f4bcc664",
                            EmailConfirmed = false,
                            Fullname = "Mr. Tam2",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "tam2",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f7470b15-509b-48b0-81d1-90bc7ffbebfa",
                            TwoFactorEnabled = false,
                            UserName = "tam2"
                        },
                        new
                        {
                            Id = "3c5ec754-01b1-49cf-94e0-09250222b060",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "980649f3-b44d-44fd-ad5a-d188fc949368",
                            EmailConfirmed = false,
                            Fullname = "Admin Ne`",
                            IsDisable = false,
                            IsEnabledMentor = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAEAACcQAAAAEHaMifmenPio6tOMmkItEGJouVwE0OIMNql432J1dNSZDG10etUQfLlGiCvdmbA1Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6ac8bcff-4753-4f62-8bd2-9eeda2eb239c",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "ADMIN",
                            ConcurrencyStamp = "ADMIN",
                            Name = "ADMIN",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "MENTOR",
                            ConcurrencyStamp = "MENTOR",
                            Name = "MENTOR",
                            NormalizedName = "MENTOR"
                        },
                        new
                        {
                            Id = "STUDENT",
                            ConcurrencyStamp = "STUDENT",
                            Name = "STUDENT",
                            NormalizedName = "STUDENT"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b060",
                            RoleId = "ADMIN"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b061",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b062",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b063",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b064",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b065",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b066",
                            RoleId = "STUDENT"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b067",
                            RoleId = "STUDENT"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b068",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b069",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b070",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b071",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b072",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b073",
                            RoleId = "STUDENT"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b074",
                            RoleId = "STUDENT"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b075",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b076",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b077",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b078",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b079",
                            RoleId = "MENTOR"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b080",
                            RoleId = "STUDENT"
                        },
                        new
                        {
                            UserId = "3c5ec754-01b1-49cf-94e0-09250222b081",
                            RoleId = "STUDENT"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Data.Entities.Course", b =>
                {
                    b.HasOne("Data.Entities.Mentor", "Mentor")
                        .WithMany("Courses")
                        .HasForeignKey("MentorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId");
                });

            modelBuilder.Entity("Data.Entities.Mentor", b =>
                {
                    b.HasOne("Data.Entities.Major", "Major")
                        .WithMany("Mentors")
                        .HasForeignKey("MajorId");

                    b.HasOne("Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Data.Entities.Question", b =>
                {
                    b.HasOne("Data.Entities.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Resource", b =>
                {
                    b.HasOne("Data.Entities.SubjectMentor", "SubjectMentor")
                        .WithMany("Resources")
                        .HasForeignKey("SubjectMentorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Section", b =>
                {
                    b.HasOne("Data.Entities.Course", "Course")
                        .WithMany("Sections")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Student", b =>
                {
                    b.HasOne("Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Data.Entities.StudentRegistration", b =>
                {
                    b.HasOne("Data.Entities.Course", "Course")
                        .WithMany("StudentRegistrations")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Student", "Student")
                        .WithMany("StudentRegistrations")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.SubjectMajor", b =>
                {
                    b.HasOne("Data.Entities.Major", "Major")
                        .WithMany("SubjectMajors")
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.SubjectMentor", b =>
                {
                    b.HasOne("Data.Entities.Mentor", "Mentor")
                        .WithMany("SubjectMentors")
                        .HasForeignKey("MentorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Subject", "Subject")
                        .WithMany("SubjectMentors")
                        .HasForeignKey("SubjectId");
                });

            modelBuilder.Entity("Data.Entities.Transaction", b =>
                {
                    b.HasOne("Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Data.Entities.User", b =>
                {
                    b.HasOne("Data.Entities.Major", "Major")
                        .WithMany("Users")
                        .HasForeignKey("MajorId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
